/* TaskList.css - Styling for the task list component */

.task-list-wrapper {
  height: 100%;
  overflow-y: auto;
  padding-right: 0.5rem;
}

.task-list-container {
  display: flex;
  flex-direction: column;
}

.task-list-header {
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.task-list-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--primary-color);
  display: flex;
  align-items: center;
}

.task-list-title::before {
  content: "";
  display: inline-block;
  width: 24px;
  height: 24px;
  margin-right: 10px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%237b68ee'%3E%3Cpath d='M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

.task-filter {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.filter-button {
  background: transparent;
  border: none;
  color: var(--text-light);
  font-size: 0.85rem;
  padding: 0.35rem 0.75rem;
  border-radius: 16px;
  cursor: pointer;
  transition: var(--transition);
}

.filter-button.active {
  background-color: var(--primary-color);
  color: white;
}

.filter-button:hover:not(.active) {
  background-color: rgba(0, 0, 0, 0.05);
}

.task-list {
  display: flex;
  flex-direction: column;
}

.no-tasks {
  text-align: center;
  padding: 2rem;
  color: var(--text-light);
  background-color: rgba(255, 255, 255, 0.7);
  border-radius: 12px;
  font-size: 1.1rem;
  border: 1px dashed #e0e0e0;
}

.no-tasks::before {
  content: "";
  display: block;
  width: 60px;
  height: 60px;
  margin: 0 auto 1rem;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23aaaaaa'%3E%3Cpath d='M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 14h-2v-2h2v2zm0-4h-2V7h2v6z'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  opacity: 0.7;
}

.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  color: var(--text-light);
}

.loading::before {
  content: "";
  display: inline-block;
  width: 24px;
  height: 24px;
  margin-right: 10px;
  border: 2px solid rgba(123, 104, 238, 0.3);
  border-radius: 50%;
  border-top-color: var(--primary-color);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Error state */
.error {
  padding: 1.5rem;
  margin: 1rem 0;
  background-color: rgba(255, 0, 0, 0.05);
  border-radius: 8px;
  border-left: 4px solid #ff0000;
}

.error p {
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: #ff0000;
}

.error pre {
  background-color: rgba(0, 0, 0, 0.05);
  padding: 0.75rem;
  border-radius: 4px;
  font-size: 0.85rem;
  white-space: pre-wrap;
  margin-bottom: 1rem;
}

.retry-button {
  background-color: #ff0000;
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  cursor: pointer;
  font-weight: 500;
  transition: var(--transition);
}

.retry-button:hover {
  background-color: #cc0000;
}

/* Main focus task display */
.main-focus {
  background-color: white;
  border-radius: var(--border-radius);
  margin-bottom: 1.5rem;
  padding: 1rem 1.5rem;
  border-left: 4px solid var(--primary-color);
}

.main-focus h3 {
  color: var(--primary-color);
  font-size: 0.9rem;
  margin-bottom: 0.5rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.main-focus p {
  font-size: 1.2rem;
  font-weight: 500;
}

@media (max-width: 768px) {
  .task-filter {
    margin-top: 1rem;
    justify-content: center;
    width: 100%;
  }

  .task-list-header {
    flex-direction: column;
    align-items: flex-start;
  }
}
